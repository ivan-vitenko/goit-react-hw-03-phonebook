{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","inputName","target","setState","value","resetState","duplicateСheck","isDublicate","props","contacts","map","item","toLowerCase","alert","handleSubmit","preventDefault","addContact","this","onSubmit","type","placeholder","onChange","Component","Filter","className","s","ContactList","filter","deleteContact","includes","id","onClick","App","contact","uuid","prevState","JSON","parse","localStorage","getItem","prevProps","prevContacts","nextContacts","setItem","stringify","Boolean","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aceb7271.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__13gOn\"};","import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const inputName = e.target.name;\n    this.setState({ [inputName]: e.target.value });\n  };\n\n  resetState = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  duplicateСheck = () => {\n    let isDublicate = false;\n\n    this.props.contacts.map(item => {\n      if (item.name.toLowerCase() === this.state.name.toLowerCase()) {\n        alert(`${item.name} is already in contacts.`);\n        isDublicate = true;\n      }\n    });\n\n    return isDublicate;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.name && this.state.number && !this.duplicateСheck()) {\n      this.props.addContact(this.state.name, this.state.number);\n      this.resetState();\n    }\n  };\n\n  render() {\n    const { name } = this.state;\n    const { number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Phone number\n          <input\n            name=\"number\"\n            type=\"number\"\n            placeholder=\"Enter number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contact by name\n    <input\n      className={s.Filter}\n      name=\"filter\"\n      type=\"text\"\n      placeholder=\"Enter to find\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filter, deleteContact }) => (\n  <ul>\n    {contacts.map(\n      item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()) && (\n          <li key={item.id}>\n            {item.name}: {item.number}{' '}\n            <button id={item.id} type=\"button\" onClick={deleteContact}>\n              Delete\n            </button>\n          </li>\n        ),\n    )}\n  </ul>\n);\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (e) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== e.target.id\n      ),\n    }));\n  };\n\n  render() {\n    // localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n\n    return (\n      <div className=\"container\">\n        <h2>Phonebook</h2>\n        <ContactForm\n          addContact={this.addContact}\n          contacts={this.state.contacts}\n        />\n\n        <h2>Contacts</h2>\n        {Boolean(this.state.contacts.length) && (\n          <div className=\"contacts\">\n            <Filter value={this.state.filter} onChange={this.handleChange} />\n\n            <ContactList\n              contacts={this.state.contacts}\n              filter={this.state.filter}\n              deleteContact={this.deleteContact}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}